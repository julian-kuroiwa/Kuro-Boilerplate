@mixin clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
    }

    & {
        *zoom: 1;
    }
}

@mixin center($position: relative) {
	position: $position;
	left: 50%;
 	top: 50%;
  	transform: translateX(-50%) translateY(-50%);
}

@mixin centerX($position: relative) {
	position: $position;
 	left: 50%;
  	transform: translateX(-50%);
}

@mixin centerY($position: relative) {
	position: $position;
 	top: 50%;
  	transform: translateY(-50%);
}

@mixin aspect-ratio($width, $height, $content: '.content') {
    position: relative;

    &:before {
        display: block;
        content: "";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

    > #{$content} {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin transition-duration($time) {
  -moz-transition-duration: $time;
    -o-transition-duration: $time;
      -webkit-transition-duration: $time;
        transition-duration: $time;
}

// generic transform
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
 
// scale
@mixin scale($scale) {
	 @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
	     -o-transform-origin: $origin;
	    -ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
          transform-origin: $origin;
}

@mixin font-size($target) {
	$em: ($target / 16);
	font-size: #{$target}px;
	font-size: #{$em}rem;
}


@mixin animation($str) {
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-ms-animation: #{$str};
	-o-animation: #{$str};
	animation: #{$str};      
}


@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
	@if $inset {
		-webkit-box-shadow:inset $top $left $blur $color;
		-moz-box-shadow:inset $top $left $blur $color;
		box-shadow:inset $top $left $blur $color;
	} @else {
		-webkit-box-shadow: $top $left $blur $color;
		-moz-box-shadow: $top $left $blur $color;
		box-shadow: $top $left $blur $color;
	}
}

@mixin font-scale($minW, $maxW, $minFont, $maxFont)
{
  font-size: #{$minFont}px;
 
  @media (min-width: #{$minW}px) and (max-width: #{$maxW}px)
  {
    font-size: calc(#{$minFont}px + (#{$maxFont} - #{$minFont}) * ( (100vw - #{$minW}px) / ( #{$maxW} - #{$minW})));
  }
  @media (min-width: #{$maxW}px)
  {
    font-size: #{$maxFont}px;
  }
}
